import java.io.*;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        int childrenCount =0;
        int groupCount =0;
        int price = 0;

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = null;
        int[] height;
        int[] gap;

        st = new StringTokenizer(br.readLine());
        childrenCount = Integer.parseInt(st.nextToken());
        groupCount = Integer.parseInt(st.nextToken());

        // 입력 받기
        height = new int[childrenCount];
        st = new StringTokenizer(br.readLine());
        for(int i=0; i<childrenCount; i++)  {
            height[i] = Integer.parseInt(st.nextToken());
        }

        // gap이라는 array에 앞 뒤 키차이를 넣음
        // 먼저 아이 수가 1명이면 그냥 0원 출력하고 끝(에러 방지)
        if(childrenCount ==1) {
            bw.write("0");
            bw.flush();
            return;
        }
        gap = new int[childrenCount-1];
        for (int i=0; i<childrenCount-1; i++) {
            gap[i] = height[i+1]-height[i];
        }

        // 차이를 정렬함
        Arrays.sort(gap);

        // 그룹 수가 n개가 되면 n-1개의 차이를 없앨 수 있음
        // 큰 수 n-1개를 빼고 다 더함
        for (int i=0; i<(gap.length-(groupCount-1)); i++) {
            price = price + gap[i];
        }

        // bw.write(childrenCount+" "+groupCount+"\n");
        // for(int i=0; i<childrenCount-1; i++)  {
        //     bw.write(gap[i]+" ");
        // }
        // bw.write("\n");
        bw.write(price+"\n");
        bw.flush();
        return;
    }
}
