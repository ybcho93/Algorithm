import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        int caseNum;
        int n[];
        int dp[][] = new int[10001][4];
        int max = 0;

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        caseNum = Integer.parseInt(br.readLine());

        n = new int[caseNum];

        for (int i = 0; i < caseNum; i++) {
            n[i] = Integer.parseInt(br.readLine());
            if (max < n[i])
                max = n[i];
        }

        // 1로만 1을 만드는 방법
        dp[1][1] = 1;
        // 1로만 2를 만드는 방법
        dp[2][1] = 1;
        // 1과 2로만 2를 만드는 방법 (1로만 만든거 빼고)
        dp[2][2] = 1;

        for (int i = 3; i <= max; i++) {
            // dp[9][3]의 예시
            // 1로만 된건 111111111 이므로 항상 1개
            // 1~2로 된건 1111111 + 111112~1222 개수를 더한다 
            // 똑같이 111111 + 11112~222 + 1113~33의 개수를 더한다. 
            dp[i][1] = dp[i - 1][1];
            dp[i][2] = dp[i - 2][1] + dp[i - 2][2];
            dp[i][3] = dp[i - 3][1] + dp[i - 3][2] + dp[i - 3][3];
        }

        for(int i=0; i<caseNum; i++) {
            bw.write(dp[n[i]][1]+dp[n[i]][2]+dp[n[i]][3]+"\n");
        }
        bw.flush();
        bw.close();

        return;

    }
}